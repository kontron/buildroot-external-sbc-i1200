--- a/drivers/media/platform/mediatek/mdp3/mt8183/mdp3-comp-mt8183.h
+++ b/drivers/media/platform/mediatek/mdp3/mt8183/mdp3-comp-mt8183.h
@@ -7,7 +7,7 @@
 #ifndef __MDP3_COMP_MT8183_H__
 #define __MDP3_COMP_MT8183_H__
 
-#include "mtk-mdp3-type.h"
+#include "../mtk-mdp3-type.h"
 
 /*
  * ISP-MDP generic output information
--- a/drivers/media/platform/mediatek/mdp3/mt8188/mdp3-comp-mt8188.h
+++ b/drivers/media/platform/mediatek/mdp3/mt8188/mdp3-comp-mt8188.h
@@ -7,7 +7,7 @@
 #ifndef __MDP3_COMP_MT8188_H__
 #define __MDP3_COMP_MT8188_H__
 
-#include "mtk-mdp3-type.h"
+#include "../mtk-mdp3-type.h"
 
 /*
  * ISP-MDP generic output information
--- a/drivers/media/platform/mediatek/mdp3/mt8195/mdp3-comp-mt8195.h
+++ b/drivers/media/platform/mediatek/mdp3/mt8195/mdp3-comp-mt8195.h
@@ -7,7 +7,7 @@
 #ifndef __MDP3_COMP_MT8195_H__
 #define __MDP3_COMP_MT8195_H__
 
-#include "mtk-mdp3-type.h"
+#include "../mtk-mdp3-type.h"
 
 /*
  * ISP-MDP generic output information
--- a/drivers/media/platform/mtk-vcodec/mtk_vcodec_dec_pm.c
+++ b/drivers/media/platform/mtk-vcodec/mtk_vcodec_dec_pm.c
@@ -122,11 +122,6 @@ void mtk_vcodec_dec_clock_on(struct mtk_vcodec_pm *pm)
 		}
 	}
 
-	ret = mtk_smi_larb_get(pm->larbvdec);
-	if (ret) {
-		mtk_v4l2_err("mtk_smi_larb_get larbvdec fail %d", ret);
-		goto error;
-	}
 	return;
 
 error:
@@ -139,7 +134,6 @@ void mtk_vcodec_dec_clock_off(struct mtk_vcodec_pm *pm)
 	struct mtk_vcodec_clk *dec_clk = &pm->vdec_clk;
 	int i = 0;
 
-	mtk_smi_larb_put(pm->larbvdec);
 	for (i = dec_clk->clk_num - 1; i >= 0; i--)
 		clk_disable_unprepare(dec_clk->clk_info[i].vcodec_clk);
 }
--- a/drivers/media/platform/mtk-vcodec/mtk_vcodec_enc_pm.c
+++ b/drivers/media/platform/mtk-vcodec/mtk_vcodec_enc_pm.c
@@ -107,12 +107,6 @@ void mtk_vcodec_enc_clock_on(struct mtk_vcodec_pm *pm)
 			goto clkerr;
 		}
 	}
-
-	ret = mtk_smi_larb_get(pm->larbvenc);
-	if (ret) {
-		mtk_v4l2_err("mtk_smi_larb_get larb3 fail %d", ret);
-		goto clkerr;
-	}
 	return;
 
 clkerr:
@@ -125,7 +119,6 @@ void mtk_vcodec_enc_clock_off(struct mtk_vcodec_pm *pm)
 	struct mtk_vcodec_clk *enc_clk = &pm->venc_clk;
 	int i = 0;
 
-	mtk_smi_larb_put(pm->larbvenc);
 	for (i = enc_clk->clk_num - 1; i >= 0; i--)
 		clk_disable_unprepare(enc_clk->clk_info[i].vcodec_clk);
 }
--- a/drivers/soc/mediatek/hdmirx/hdmi_rx2_cmd.c
+++ b/drivers/soc/mediatek/hdmirx/hdmi_rx2_cmd.c
@@ -24,7 +24,7 @@
 #include <linux/of_gpio.h>
 #include <linux/of_graph.h>
 
-#include <mtk_hdmirx.h>
+#include "mtk_hdmirx.h"
 
 #include "hdmi_rx2_hw.h"
 #include "vga_table.h"
--- a/sound/soc/mediatek/mt8188/mt8188-audsys-clk.c
+++ b/sound/soc/mediatek/mt8188/mt8188-audsys-clk.c
@@ -222,7 +222,7 @@ static const struct clk_ops multi_gate_ops = {
 	.is_enabled = multi_gate_is_enabled,
 };
 
-struct clk *audsys_register_multi_gate(struct device *dev,
+static struct clk *audsys_register_multi_gate(struct device *dev,
 				       const char *name,
 				       const char *parent_name,
 				       unsigned long flags,
@@ -264,7 +264,7 @@ struct clk *audsys_register_multi_gate(struct device *dev,
 	return hw->clk;
 }
 
-void audsys_unregister_multi_gate(struct clk *clk)
+static void audsys_unregister_multi_gate(struct clk *clk)
 {
 	struct audsys_multi_gate *gate;
 	struct clk_hw *hw;
--- a/sound/soc/mediatek/mt8195/mt8195-audsys-clk.c
+++ b/sound/soc/mediatek/mt8195/mt8195-audsys-clk.c
@@ -234,7 +234,7 @@ static const struct clk_ops multi_gate_ops = {
 	.is_enabled = multi_gate_is_enabled,
 };
 
-struct clk *audsys_register_multi_gate(struct device *dev,
+static struct clk *audsys_register_multi_gate(struct device *dev,
 		const char *name,
 		const char *parent_name,
 		unsigned long flags,
@@ -274,7 +274,7 @@ struct clk *audsys_register_multi_gate(struct device *dev,
 	return hw->clk;
 }
 
-void audsys_unregister_multi_gate(struct clk *clk)
+static void audsys_unregister_multi_gate(struct clk *clk)
 {
 	struct audsys_multi_gate *gate;
 	struct clk_hw *hw;
